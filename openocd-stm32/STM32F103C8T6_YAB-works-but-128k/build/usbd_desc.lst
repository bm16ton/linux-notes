ARM GAS  /tmp/ccTn8evy.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usbd_desc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.USBD_FS_DeviceDescriptor,"ax",%progbits
  16              		.align	1
  17              		.global	USBD_FS_DeviceDescriptor
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	USBD_FS_DeviceDescriptor:
  25              	.LVL0:
  26              	.LFB68:
  27              		.file 1 "Src/usbd_desc.c"
   1:Src/usbd_desc.c **** /* USER CODE BEGIN Header */
   2:Src/usbd_desc.c **** /**
   3:Src/usbd_desc.c ****   ******************************************************************************
   4:Src/usbd_desc.c ****   * @file           : usbd_desc.c
   5:Src/usbd_desc.c ****   * @version        : v2.0_Cube
   6:Src/usbd_desc.c ****   * @brief          : This file implements the USB device descriptors.
   7:Src/usbd_desc.c ****   ******************************************************************************
   8:Src/usbd_desc.c ****   * @attention
   9:Src/usbd_desc.c ****   *
  10:Src/usbd_desc.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  11:Src/usbd_desc.c ****   * All rights reserved.</center></h2>
  12:Src/usbd_desc.c ****   *
  13:Src/usbd_desc.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbd_desc.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbd_desc.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbd_desc.c ****   *                             www.st.com/SLA0044
  17:Src/usbd_desc.c ****   *
  18:Src/usbd_desc.c ****   ******************************************************************************
  19:Src/usbd_desc.c ****   */
  20:Src/usbd_desc.c **** /* USER CODE END Header */
  21:Src/usbd_desc.c **** 
  22:Src/usbd_desc.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbd_desc.c **** #include "usbd_core.h"
  24:Src/usbd_desc.c **** #include "usbd_desc.h"
  25:Src/usbd_desc.c **** #include "usbd_conf.h"
  26:Src/usbd_desc.c **** 
  27:Src/usbd_desc.c **** /* USER CODE BEGIN INCLUDE */
  28:Src/usbd_desc.c **** 
  29:Src/usbd_desc.c **** /* USER CODE END INCLUDE */
  30:Src/usbd_desc.c **** 
  31:Src/usbd_desc.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccTn8evy.s 			page 2


  32:Src/usbd_desc.c **** /* Private define ------------------------------------------------------------*/
  33:Src/usbd_desc.c **** /* Private macro -------------------------------------------------------------*/
  34:Src/usbd_desc.c **** 
  35:Src/usbd_desc.c **** /* USER CODE BEGIN PV */
  36:Src/usbd_desc.c **** /* Private variables ---------------------------------------------------------*/
  37:Src/usbd_desc.c **** 
  38:Src/usbd_desc.c **** /* USER CODE END PV */
  39:Src/usbd_desc.c **** 
  40:Src/usbd_desc.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  41:Src/usbd_desc.c ****   * @{
  42:Src/usbd_desc.c ****   */
  43:Src/usbd_desc.c **** 
  44:Src/usbd_desc.c **** /** @addtogroup USBD_DESC
  45:Src/usbd_desc.c ****   * @{
  46:Src/usbd_desc.c ****   */
  47:Src/usbd_desc.c **** 
  48:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_TypesDefinitions USBD_DESC_Private_TypesDefinitions
  49:Src/usbd_desc.c ****   * @brief Private types.
  50:Src/usbd_desc.c ****   * @{
  51:Src/usbd_desc.c ****   */
  52:Src/usbd_desc.c **** 
  53:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  54:Src/usbd_desc.c **** 
  55:Src/usbd_desc.c **** /* USER CODE END PRIVATE_TYPES */
  56:Src/usbd_desc.c **** 
  57:Src/usbd_desc.c **** /**
  58:Src/usbd_desc.c ****   * @}
  59:Src/usbd_desc.c ****   */
  60:Src/usbd_desc.c **** 
  61:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Defines USBD_DESC_Private_Defines
  62:Src/usbd_desc.c ****   * @brief Private defines.
  63:Src/usbd_desc.c ****   * @{
  64:Src/usbd_desc.c ****   */
  65:Src/usbd_desc.c **** 
  66:Src/usbd_desc.c **** #define USBD_VID     1155
  67:Src/usbd_desc.c **** #define USBD_LANGID_STRING     1033
  68:Src/usbd_desc.c **** #define USBD_MANUFACTURER_STRING     "STMicroelectronics"
  69:Src/usbd_desc.c **** #define USBD_PID_FS     0x5723
  70:Src/usbd_desc.c **** #define USBD_PRODUCT_STRING_FS     "STM32 Mass Storage"
  71:Src/usbd_desc.c **** #define USBD_CONFIGURATION_STRING_FS     "MSC Config"
  72:Src/usbd_desc.c **** #define USBD_INTERFACE_STRING_FS     "MSC Interface"
  73:Src/usbd_desc.c **** 
  74:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  75:Src/usbd_desc.c **** 
  76:Src/usbd_desc.c **** /* USER CODE END PRIVATE_DEFINES */
  77:Src/usbd_desc.c **** 
  78:Src/usbd_desc.c **** /**
  79:Src/usbd_desc.c ****   * @}
  80:Src/usbd_desc.c ****   */
  81:Src/usbd_desc.c **** 
  82:Src/usbd_desc.c **** /* USER CODE BEGIN 0 */
  83:Src/usbd_desc.c **** 
  84:Src/usbd_desc.c **** /* USER CODE END 0 */
  85:Src/usbd_desc.c **** 
  86:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Macros USBD_DESC_Private_Macros
  87:Src/usbd_desc.c ****   * @brief Private macros.
  88:Src/usbd_desc.c ****   * @{
ARM GAS  /tmp/ccTn8evy.s 			page 3


  89:Src/usbd_desc.c ****   */
  90:Src/usbd_desc.c **** 
  91:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  92:Src/usbd_desc.c **** 
  93:Src/usbd_desc.c **** /* USER CODE END PRIVATE_MACRO */
  94:Src/usbd_desc.c **** 
  95:Src/usbd_desc.c **** /**
  96:Src/usbd_desc.c ****   * @}
  97:Src/usbd_desc.c ****   */
  98:Src/usbd_desc.c **** 
  99:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 100:Src/usbd_desc.c ****   * @brief Private functions declaration.
 101:Src/usbd_desc.c ****   * @{
 102:Src/usbd_desc.c ****   */
 103:Src/usbd_desc.c **** 
 104:Src/usbd_desc.c **** static void Get_SerialNum(void);
 105:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len);
 106:Src/usbd_desc.c **** 
 107:Src/usbd_desc.c **** /**
 108:Src/usbd_desc.c ****   * @}
 109:Src/usbd_desc.c ****   */
 110:Src/usbd_desc.c **** 
 111:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 112:Src/usbd_desc.c ****   * @brief Private functions declaration for FS.
 113:Src/usbd_desc.c ****   * @{
 114:Src/usbd_desc.c ****   */
 115:Src/usbd_desc.c **** 
 116:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 117:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 118:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 119:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 120:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 121:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 122:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 123:Src/usbd_desc.c **** 
 124:Src/usbd_desc.c **** /**
 125:Src/usbd_desc.c ****   * @}
 126:Src/usbd_desc.c ****   */
 127:Src/usbd_desc.c **** 
 128:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 129:Src/usbd_desc.c ****   * @brief Private variables.
 130:Src/usbd_desc.c ****   * @{
 131:Src/usbd_desc.c ****   */
 132:Src/usbd_desc.c **** 
 133:Src/usbd_desc.c **** USBD_DescriptorsTypeDef FS_Desc =
 134:Src/usbd_desc.c **** {
 135:Src/usbd_desc.c ****   USBD_FS_DeviceDescriptor
 136:Src/usbd_desc.c **** , USBD_FS_LangIDStrDescriptor
 137:Src/usbd_desc.c **** , USBD_FS_ManufacturerStrDescriptor
 138:Src/usbd_desc.c **** , USBD_FS_ProductStrDescriptor
 139:Src/usbd_desc.c **** , USBD_FS_SerialStrDescriptor
 140:Src/usbd_desc.c **** , USBD_FS_ConfigStrDescriptor
 141:Src/usbd_desc.c **** , USBD_FS_InterfaceStrDescriptor
 142:Src/usbd_desc.c **** };
 143:Src/usbd_desc.c **** 
 144:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 145:Src/usbd_desc.c ****   #pragma data_alignment=4
ARM GAS  /tmp/ccTn8evy.s 			page 4


 146:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 147:Src/usbd_desc.c **** /** USB standard device descriptor. */
 148:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_DeviceDesc[USB_LEN_DEV_DESC] __ALIGN_END =
 149:Src/usbd_desc.c **** {
 150:Src/usbd_desc.c ****   0x12,                       /*bLength */
 151:Src/usbd_desc.c ****   USB_DESC_TYPE_DEVICE,       /*bDescriptorType*/
 152:Src/usbd_desc.c ****   0x00,                       /*bcdUSB */
 153:Src/usbd_desc.c ****   0x02,
 154:Src/usbd_desc.c ****   0x00,                       /*bDeviceClass*/
 155:Src/usbd_desc.c ****   0x00,                       /*bDeviceSubClass*/
 156:Src/usbd_desc.c ****   0x00,                       /*bDeviceProtocol*/
 157:Src/usbd_desc.c ****   USB_MAX_EP0_SIZE,           /*bMaxPacketSize*/
 158:Src/usbd_desc.c ****   LOBYTE(USBD_VID),           /*idVendor*/
 159:Src/usbd_desc.c ****   HIBYTE(USBD_VID),           /*idVendor*/
 160:Src/usbd_desc.c ****   LOBYTE(USBD_PID_FS),        /*idProduct*/
 161:Src/usbd_desc.c ****   HIBYTE(USBD_PID_FS),        /*idProduct*/
 162:Src/usbd_desc.c ****   0x00,                       /*bcdDevice rel. 2.00*/
 163:Src/usbd_desc.c ****   0x02,
 164:Src/usbd_desc.c ****   USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
 165:Src/usbd_desc.c ****   USBD_IDX_PRODUCT_STR,       /*Index of product string*/
 166:Src/usbd_desc.c ****   USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
 167:Src/usbd_desc.c ****   USBD_MAX_NUM_CONFIGURATION  /*bNumConfigurations*/
 168:Src/usbd_desc.c **** };
 169:Src/usbd_desc.c **** 
 170:Src/usbd_desc.c **** /* USB_DeviceDescriptor */
 171:Src/usbd_desc.c **** 
 172:Src/usbd_desc.c **** /**
 173:Src/usbd_desc.c ****   * @}
 174:Src/usbd_desc.c ****   */
 175:Src/usbd_desc.c **** 
 176:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 177:Src/usbd_desc.c ****   * @brief Private variables.
 178:Src/usbd_desc.c ****   * @{
 179:Src/usbd_desc.c ****   */
 180:Src/usbd_desc.c **** 
 181:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 182:Src/usbd_desc.c ****   #pragma data_alignment=4
 183:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 184:Src/usbd_desc.c **** 
 185:Src/usbd_desc.c **** /** USB lang indentifier descriptor. */
 186:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_LEN_LANGID_STR_DESC] __ALIGN_END =
 187:Src/usbd_desc.c **** {
 188:Src/usbd_desc.c ****      USB_LEN_LANGID_STR_DESC,
 189:Src/usbd_desc.c ****      USB_DESC_TYPE_STRING,
 190:Src/usbd_desc.c ****      LOBYTE(USBD_LANGID_STRING),
 191:Src/usbd_desc.c ****      HIBYTE(USBD_LANGID_STRING)
 192:Src/usbd_desc.c **** };
 193:Src/usbd_desc.c **** 
 194:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 195:Src/usbd_desc.c ****   #pragma data_alignment=4
 196:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 197:Src/usbd_desc.c **** /* Internal string descriptor. */
 198:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StrDesc[USBD_MAX_STR_DESC_SIZ] __ALIGN_END;
 199:Src/usbd_desc.c **** 
 200:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 201:Src/usbd_desc.c ****   #pragma data_alignment=4
 202:Src/usbd_desc.c **** #endif
ARM GAS  /tmp/ccTn8evy.s 			page 5


 203:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StringSerial[USB_SIZ_STRING_SERIAL] __ALIGN_END = {
 204:Src/usbd_desc.c ****   USB_SIZ_STRING_SERIAL,
 205:Src/usbd_desc.c ****   USB_DESC_TYPE_STRING,
 206:Src/usbd_desc.c **** };
 207:Src/usbd_desc.c **** 
 208:Src/usbd_desc.c **** /**
 209:Src/usbd_desc.c ****   * @}
 210:Src/usbd_desc.c ****   */
 211:Src/usbd_desc.c **** 
 212:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Functions USBD_DESC_Private_Functions
 213:Src/usbd_desc.c ****   * @brief Private functions.
 214:Src/usbd_desc.c ****   * @{
 215:Src/usbd_desc.c ****   */
 216:Src/usbd_desc.c **** 
 217:Src/usbd_desc.c **** /**
 218:Src/usbd_desc.c ****   * @brief  Return the device descriptor
 219:Src/usbd_desc.c ****   * @param  speed : Current device speed
 220:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 221:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 222:Src/usbd_desc.c ****   */
 223:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 224:Src/usbd_desc.c **** {
  28              		.loc 1 224 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 225:Src/usbd_desc.c ****   UNUSED(speed);
  33              		.loc 1 225 3 view .LVU1
 226:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_DeviceDesc);
  34              		.loc 1 226 3 view .LVU2
  35              		.loc 1 226 11 is_stmt 0 view .LVU3
  36 0000 1223     		movs	r3, #18
  37 0002 0B80     		strh	r3, [r1]	@ movhi
 227:Src/usbd_desc.c ****   return USBD_FS_DeviceDesc;
  38              		.loc 1 227 3 is_stmt 1 view .LVU4
 228:Src/usbd_desc.c **** }
  39              		.loc 1 228 1 is_stmt 0 view .LVU5
  40 0004 0048     		ldr	r0, .L2
  41              	.LVL1:
  42              		.loc 1 228 1 view .LVU6
  43 0006 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0008 00000000 		.word	.LANCHOR0
  48              		.cfi_endproc
  49              	.LFE68:
  51              		.section	.text.USBD_FS_LangIDStrDescriptor,"ax",%progbits
  52              		.align	1
  53              		.global	USBD_FS_LangIDStrDescriptor
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu softvfp
  59              	USBD_FS_LangIDStrDescriptor:
  60              	.LVL2:
ARM GAS  /tmp/ccTn8evy.s 			page 6


  61              	.LFB69:
 229:Src/usbd_desc.c **** 
 230:Src/usbd_desc.c **** /**
 231:Src/usbd_desc.c ****   * @brief  Return the LangID string descriptor
 232:Src/usbd_desc.c ****   * @param  speed : Current device speed
 233:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 234:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 235:Src/usbd_desc.c ****   */
 236:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 237:Src/usbd_desc.c **** {
  62              		.loc 1 237 1 is_stmt 1 view -0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
 238:Src/usbd_desc.c ****   UNUSED(speed);
  67              		.loc 1 238 3 view .LVU8
 239:Src/usbd_desc.c ****   *length = sizeof(USBD_LangIDDesc);
  68              		.loc 1 239 3 view .LVU9
  69              		.loc 1 239 11 is_stmt 0 view .LVU10
  70 0000 0423     		movs	r3, #4
  71 0002 0B80     		strh	r3, [r1]	@ movhi
 240:Src/usbd_desc.c ****   return USBD_LangIDDesc;
  72              		.loc 1 240 3 is_stmt 1 view .LVU11
 241:Src/usbd_desc.c **** }
  73              		.loc 1 241 1 is_stmt 0 view .LVU12
  74 0004 0048     		ldr	r0, .L5
  75              	.LVL3:
  76              		.loc 1 241 1 view .LVU13
  77 0006 7047     		bx	lr
  78              	.L6:
  79              		.align	2
  80              	.L5:
  81 0008 00000000 		.word	.LANCHOR1
  82              		.cfi_endproc
  83              	.LFE69:
  85              		.section	.text.IntToUnicode,"ax",%progbits
  86              		.align	1
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.fpu softvfp
  92              	IntToUnicode:
  93              	.LVL4:
  94              	.LFB76:
 242:Src/usbd_desc.c **** 
 243:Src/usbd_desc.c **** /**
 244:Src/usbd_desc.c ****   * @brief  Return the product string descriptor
 245:Src/usbd_desc.c ****   * @param  speed : Current device speed
 246:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 247:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 248:Src/usbd_desc.c ****   */
 249:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 250:Src/usbd_desc.c **** {
 251:Src/usbd_desc.c ****   if(speed == 0)
 252:Src/usbd_desc.c ****   {
 253:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
ARM GAS  /tmp/ccTn8evy.s 			page 7


 254:Src/usbd_desc.c ****   }
 255:Src/usbd_desc.c ****   else
 256:Src/usbd_desc.c ****   {
 257:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 258:Src/usbd_desc.c ****   }
 259:Src/usbd_desc.c ****   return USBD_StrDesc;
 260:Src/usbd_desc.c **** }
 261:Src/usbd_desc.c **** 
 262:Src/usbd_desc.c **** /**
 263:Src/usbd_desc.c ****   * @brief  Return the manufacturer string descriptor
 264:Src/usbd_desc.c ****   * @param  speed : Current device speed
 265:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 266:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 267:Src/usbd_desc.c ****   */
 268:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 269:Src/usbd_desc.c **** {
 270:Src/usbd_desc.c ****   UNUSED(speed);
 271:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 272:Src/usbd_desc.c ****   return USBD_StrDesc;
 273:Src/usbd_desc.c **** }
 274:Src/usbd_desc.c **** 
 275:Src/usbd_desc.c **** /**
 276:Src/usbd_desc.c ****   * @brief  Return the serial number string descriptor
 277:Src/usbd_desc.c ****   * @param  speed : Current device speed
 278:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 279:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 280:Src/usbd_desc.c ****   */
 281:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 282:Src/usbd_desc.c **** {
 283:Src/usbd_desc.c ****   UNUSED(speed);
 284:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 285:Src/usbd_desc.c **** 
 286:Src/usbd_desc.c ****   /* Update the serial number string descriptor with the data from the unique
 287:Src/usbd_desc.c ****    * ID */
 288:Src/usbd_desc.c ****   Get_SerialNum();
 289:Src/usbd_desc.c ****   /* USER CODE BEGIN USBD_FS_SerialStrDescriptor */
 290:Src/usbd_desc.c **** 
 291:Src/usbd_desc.c ****   /* USER CODE END USBD_FS_SerialStrDescriptor */
 292:Src/usbd_desc.c ****   return (uint8_t *) USBD_StringSerial;
 293:Src/usbd_desc.c **** }
 294:Src/usbd_desc.c **** 
 295:Src/usbd_desc.c **** /**
 296:Src/usbd_desc.c ****   * @brief  Return the configuration string descriptor
 297:Src/usbd_desc.c ****   * @param  speed : Current device speed
 298:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 299:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 300:Src/usbd_desc.c ****   */
 301:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 302:Src/usbd_desc.c **** {
 303:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 304:Src/usbd_desc.c ****   {
 305:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 306:Src/usbd_desc.c ****   }
 307:Src/usbd_desc.c ****   else
 308:Src/usbd_desc.c ****   {
 309:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 310:Src/usbd_desc.c ****   }
ARM GAS  /tmp/ccTn8evy.s 			page 8


 311:Src/usbd_desc.c ****   return USBD_StrDesc;
 312:Src/usbd_desc.c **** }
 313:Src/usbd_desc.c **** 
 314:Src/usbd_desc.c **** /**
 315:Src/usbd_desc.c ****   * @brief  Return the interface string descriptor
 316:Src/usbd_desc.c ****   * @param  speed : Current device speed
 317:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 318:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 319:Src/usbd_desc.c ****   */
 320:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 321:Src/usbd_desc.c **** {
 322:Src/usbd_desc.c ****   if(speed == 0)
 323:Src/usbd_desc.c ****   {
 324:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 325:Src/usbd_desc.c ****   }
 326:Src/usbd_desc.c ****   else
 327:Src/usbd_desc.c ****   {
 328:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 329:Src/usbd_desc.c ****   }
 330:Src/usbd_desc.c ****   return USBD_StrDesc;
 331:Src/usbd_desc.c **** }
 332:Src/usbd_desc.c **** 
 333:Src/usbd_desc.c **** /**
 334:Src/usbd_desc.c ****   * @brief  Create the serial number string descriptor
 335:Src/usbd_desc.c ****   * @param  None
 336:Src/usbd_desc.c ****   * @retval None
 337:Src/usbd_desc.c ****   */
 338:Src/usbd_desc.c **** static void Get_SerialNum(void)
 339:Src/usbd_desc.c **** {
 340:Src/usbd_desc.c ****   uint32_t deviceserial0, deviceserial1, deviceserial2;
 341:Src/usbd_desc.c **** 
 342:Src/usbd_desc.c ****   deviceserial0 = *(uint32_t *) DEVICE_ID1;
 343:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 344:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 345:Src/usbd_desc.c **** 
 346:Src/usbd_desc.c ****   deviceserial0 += deviceserial2;
 347:Src/usbd_desc.c **** 
 348:Src/usbd_desc.c ****   if (deviceserial0 != 0)
 349:Src/usbd_desc.c ****   {
 350:Src/usbd_desc.c ****     IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 351:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 352:Src/usbd_desc.c ****   }
 353:Src/usbd_desc.c **** }
 354:Src/usbd_desc.c **** 
 355:Src/usbd_desc.c **** /**
 356:Src/usbd_desc.c ****   * @brief  Convert Hex 32Bits value into char
 357:Src/usbd_desc.c ****   * @param  value: value to convert
 358:Src/usbd_desc.c ****   * @param  pbuf: pointer to the buffer
 359:Src/usbd_desc.c ****   * @param  len: buffer length
 360:Src/usbd_desc.c ****   * @retval None
 361:Src/usbd_desc.c ****   */
 362:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
 363:Src/usbd_desc.c **** {
  95              		.loc 1 363 1 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccTn8evy.s 			page 9


  99              		@ link register save eliminated.
 364:Src/usbd_desc.c ****   uint8_t idx = 0;
 100              		.loc 1 364 3 view .LVU15
 365:Src/usbd_desc.c **** 
 366:Src/usbd_desc.c ****   for (idx = 0; idx < len; idx++)
 101              		.loc 1 366 3 view .LVU16
 102              		.loc 1 366 12 is_stmt 0 view .LVU17
 103 0000 0023     		movs	r3, #0
 104              	.LVL5:
 105              		.loc 1 366 17 is_stmt 1 view .LVU18
 106              		.loc 1 366 3 is_stmt 0 view .LVU19
 107 0002 9342     		cmp	r3, r2
 108 0004 17D2     		bcs	.L15
 363:Src/usbd_desc.c ****   uint8_t idx = 0;
 109              		.loc 1 363 1 view .LVU20
 110 0006 30B4     		push	{r4, r5}
 111              	.LCFI0:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 4, -8
 114              		.cfi_offset 5, -4
 115 0008 0BE0     		b	.L11
 116              	.L9:
 367:Src/usbd_desc.c ****   {
 368:Src/usbd_desc.c ****     if (((value >> 28)) < 0xA)
 369:Src/usbd_desc.c ****     {
 370:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + '0';
 371:Src/usbd_desc.c ****     }
 372:Src/usbd_desc.c ****     else
 373:Src/usbd_desc.c ****     {
 374:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 117              		.loc 1 374 7 is_stmt 1 view .LVU21
 118              		.loc 1 374 43 is_stmt 0 view .LVU22
 119 000a 3734     		adds	r4, r4, #55
 120              		.loc 1 374 21 view .LVU23
 121 000c 01F81340 		strb	r4, [r1, r3, lsl #1]
 122              	.L10:
 375:Src/usbd_desc.c ****     }
 376:Src/usbd_desc.c **** 
 377:Src/usbd_desc.c ****     value = value << 4;
 123              		.loc 1 377 5 is_stmt 1 discriminator 2 view .LVU24
 124              		.loc 1 377 11 is_stmt 0 discriminator 2 view .LVU25
 125 0010 0001     		lsls	r0, r0, #4
 126              	.LVL6:
 378:Src/usbd_desc.c **** 
 379:Src/usbd_desc.c ****     pbuf[2 * idx + 1] = 0;
 127              		.loc 1 379 5 is_stmt 1 discriminator 2 view .LVU26
 128              		.loc 1 379 12 is_stmt 0 discriminator 2 view .LVU27
 129 0012 5C00     		lsls	r4, r3, #1
 130              		.loc 1 379 9 discriminator 2 view .LVU28
 131 0014 0134     		adds	r4, r4, #1
 132              		.loc 1 379 23 discriminator 2 view .LVU29
 133 0016 0025     		movs	r5, #0
 134 0018 0D55     		strb	r5, [r1, r4]
 366:Src/usbd_desc.c ****   {
 135              		.loc 1 366 28 is_stmt 1 discriminator 2 view .LVU30
 366:Src/usbd_desc.c ****   {
 136              		.loc 1 366 31 is_stmt 0 discriminator 2 view .LVU31
ARM GAS  /tmp/ccTn8evy.s 			page 10


 137 001a 0133     		adds	r3, r3, #1
 138              	.LVL7:
 366:Src/usbd_desc.c ****   {
 139              		.loc 1 366 31 discriminator 2 view .LVU32
 140 001c DBB2     		uxtb	r3, r3
 141              	.LVL8:
 366:Src/usbd_desc.c ****   {
 142              		.loc 1 366 17 is_stmt 1 discriminator 2 view .LVU33
 366:Src/usbd_desc.c ****   {
 143              		.loc 1 366 3 is_stmt 0 discriminator 2 view .LVU34
 144 001e 9342     		cmp	r3, r2
 145 0020 07D2     		bcs	.L16
 146              	.L11:
 368:Src/usbd_desc.c ****     {
 147              		.loc 1 368 5 is_stmt 1 view .LVU35
 368:Src/usbd_desc.c ****     {
 148              		.loc 1 368 17 is_stmt 0 view .LVU36
 149 0022 040F     		lsrs	r4, r0, #28
 368:Src/usbd_desc.c ****     {
 150              		.loc 1 368 8 view .LVU37
 151 0024 B0F1204F 		cmp	r0, #-1610612736
 152 0028 EFD2     		bcs	.L9
 370:Src/usbd_desc.c ****     }
 153              		.loc 1 370 7 is_stmt 1 view .LVU38
 370:Src/usbd_desc.c ****     }
 154              		.loc 1 370 37 is_stmt 0 view .LVU39
 155 002a 3034     		adds	r4, r4, #48
 370:Src/usbd_desc.c ****     }
 156              		.loc 1 370 21 view .LVU40
 157 002c 01F81340 		strb	r4, [r1, r3, lsl #1]
 158 0030 EEE7     		b	.L10
 159              	.L16:
 380:Src/usbd_desc.c ****   }
 381:Src/usbd_desc.c **** }
 160              		.loc 1 381 1 view .LVU41
 161 0032 30BC     		pop	{r4, r5}
 162              	.LCFI1:
 163              		.cfi_restore 5
 164              		.cfi_restore 4
 165              		.cfi_def_cfa_offset 0
 166 0034 7047     		bx	lr
 167              	.L15:
 168              		.loc 1 381 1 view .LVU42
 169 0036 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE76:
 173              		.section	.text.Get_SerialNum,"ax",%progbits
 174              		.align	1
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu softvfp
 180              	Get_SerialNum:
 181              	.LFB75:
 339:Src/usbd_desc.c ****   uint32_t deviceserial0, deviceserial1, deviceserial2;
 182              		.loc 1 339 1 is_stmt 1 view -0
 183              		.cfi_startproc
ARM GAS  /tmp/ccTn8evy.s 			page 11


 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186 0000 38B5     		push	{r3, r4, r5, lr}
 187              	.LCFI2:
 188              		.cfi_def_cfa_offset 16
 189              		.cfi_offset 3, -16
 190              		.cfi_offset 4, -12
 191              		.cfi_offset 5, -8
 192              		.cfi_offset 14, -4
 340:Src/usbd_desc.c **** 
 193              		.loc 1 340 3 view .LVU44
 342:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 194              		.loc 1 342 3 view .LVU45
 342:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 195              		.loc 1 342 17 is_stmt 0 view .LVU46
 196 0002 0A4B     		ldr	r3, .L21
 197 0004 1868     		ldr	r0, [r3]
 198              	.LVL9:
 343:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 199              		.loc 1 343 3 is_stmt 1 view .LVU47
 343:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 200              		.loc 1 343 17 is_stmt 0 view .LVU48
 201 0006 0433     		adds	r3, r3, #4
 202 0008 1C68     		ldr	r4, [r3]
 203              	.LVL10:
 344:Src/usbd_desc.c **** 
 204              		.loc 1 344 3 is_stmt 1 view .LVU49
 344:Src/usbd_desc.c **** 
 205              		.loc 1 344 17 is_stmt 0 view .LVU50
 206 000a 0433     		adds	r3, r3, #4
 207 000c 1B68     		ldr	r3, [r3]
 208              	.LVL11:
 346:Src/usbd_desc.c **** 
 209              		.loc 1 346 3 is_stmt 1 view .LVU51
 348:Src/usbd_desc.c ****   {
 210              		.loc 1 348 3 view .LVU52
 348:Src/usbd_desc.c ****   {
 211              		.loc 1 348 6 is_stmt 0 view .LVU53
 212 000e C018     		adds	r0, r0, r3
 213              	.LVL12:
 348:Src/usbd_desc.c ****   {
 214              		.loc 1 348 6 view .LVU54
 215 0010 00D1     		bne	.L20
 216              	.LVL13:
 217              	.L17:
 353:Src/usbd_desc.c **** 
 218              		.loc 1 353 1 view .LVU55
 219 0012 38BD     		pop	{r3, r4, r5, pc}
 220              	.LVL14:
 221              	.L20:
 350:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 222              		.loc 1 350 5 is_stmt 1 view .LVU56
 223 0014 064D     		ldr	r5, .L21+4
 224 0016 0822     		movs	r2, #8
 225 0018 A91C     		adds	r1, r5, #2
 226 001a FFF7FEFF 		bl	IntToUnicode
 227              	.LVL15:
ARM GAS  /tmp/ccTn8evy.s 			page 12


 351:Src/usbd_desc.c ****   }
 228              		.loc 1 351 5 view .LVU57
 229 001e 0422     		movs	r2, #4
 230 0020 05F11201 		add	r1, r5, #18
 231 0024 2046     		mov	r0, r4
 232 0026 FFF7FEFF 		bl	IntToUnicode
 233              	.LVL16:
 353:Src/usbd_desc.c **** 
 234              		.loc 1 353 1 is_stmt 0 view .LVU58
 235 002a F2E7     		b	.L17
 236              	.L22:
 237              		.align	2
 238              	.L21:
 239 002c E8F7FF1F 		.word	536868840
 240 0030 00000000 		.word	.LANCHOR2
 241              		.cfi_endproc
 242              	.LFE75:
 244              		.section	.text.USBD_FS_SerialStrDescriptor,"ax",%progbits
 245              		.align	1
 246              		.global	USBD_FS_SerialStrDescriptor
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 250              		.fpu softvfp
 252              	USBD_FS_SerialStrDescriptor:
 253              	.LVL17:
 254              	.LFB72:
 282:Src/usbd_desc.c ****   UNUSED(speed);
 255              		.loc 1 282 1 is_stmt 1 view -0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 282:Src/usbd_desc.c ****   UNUSED(speed);
 259              		.loc 1 282 1 is_stmt 0 view .LVU60
 260 0000 08B5     		push	{r3, lr}
 261              	.LCFI3:
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 3, -8
 264              		.cfi_offset 14, -4
 283:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 265              		.loc 1 283 3 is_stmt 1 view .LVU61
 284:Src/usbd_desc.c **** 
 266              		.loc 1 284 3 view .LVU62
 284:Src/usbd_desc.c **** 
 267              		.loc 1 284 11 is_stmt 0 view .LVU63
 268 0002 1A23     		movs	r3, #26
 269 0004 0B80     		strh	r3, [r1]	@ movhi
 288:Src/usbd_desc.c ****   /* USER CODE BEGIN USBD_FS_SerialStrDescriptor */
 270              		.loc 1 288 3 is_stmt 1 view .LVU64
 271 0006 FFF7FEFF 		bl	Get_SerialNum
 272              	.LVL18:
 292:Src/usbd_desc.c **** }
 273              		.loc 1 292 3 view .LVU65
 293:Src/usbd_desc.c **** 
 274              		.loc 1 293 1 is_stmt 0 view .LVU66
 275 000a 0148     		ldr	r0, .L25
 276 000c 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccTn8evy.s 			page 13


 277              	.L26:
 278 000e 00BF     		.align	2
 279              	.L25:
 280 0010 00000000 		.word	.LANCHOR2
 281              		.cfi_endproc
 282              	.LFE72:
 284              		.section	.rodata.USBD_FS_ProductStrDescriptor.str1.4,"aMS",%progbits,1
 285              		.align	2
 286              	.LC0:
 287 0000 53544D33 		.ascii	"STM32 Mass Storage\000"
 287      32204D61 
 287      73732053 
 287      746F7261 
 287      676500
 288              		.section	.text.USBD_FS_ProductStrDescriptor,"ax",%progbits
 289              		.align	1
 290              		.global	USBD_FS_ProductStrDescriptor
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu softvfp
 296              	USBD_FS_ProductStrDescriptor:
 297              	.LVL19:
 298              	.LFB70:
 250:Src/usbd_desc.c ****   if(speed == 0)
 299              		.loc 1 250 1 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 250:Src/usbd_desc.c ****   if(speed == 0)
 303              		.loc 1 250 1 is_stmt 0 view .LVU68
 304 0000 08B5     		push	{r3, lr}
 305              	.LCFI4:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 3, -8
 308              		.cfi_offset 14, -4
 309 0002 0A46     		mov	r2, r1
 251:Src/usbd_desc.c ****   {
 310              		.loc 1 251 3 is_stmt 1 view .LVU69
 251:Src/usbd_desc.c ****   {
 311              		.loc 1 251 5 is_stmt 0 view .LVU70
 312 0004 28B9     		cbnz	r0, .L28
 253:Src/usbd_desc.c ****   }
 313              		.loc 1 253 5 is_stmt 1 view .LVU71
 314 0006 0549     		ldr	r1, .L31
 315              	.LVL20:
 253:Src/usbd_desc.c ****   }
 316              		.loc 1 253 5 is_stmt 0 view .LVU72
 317 0008 0548     		ldr	r0, .L31+4
 318              	.LVL21:
 253:Src/usbd_desc.c ****   }
 319              		.loc 1 253 5 view .LVU73
 320 000a FFF7FEFF 		bl	USBD_GetString
 321              	.LVL22:
 322              	.L29:
 259:Src/usbd_desc.c **** }
 323              		.loc 1 259 3 is_stmt 1 view .LVU74
ARM GAS  /tmp/ccTn8evy.s 			page 14


 260:Src/usbd_desc.c **** 
 324              		.loc 1 260 1 is_stmt 0 view .LVU75
 325 000e 0348     		ldr	r0, .L31
 326 0010 08BD     		pop	{r3, pc}
 327              	.LVL23:
 328              	.L28:
 257:Src/usbd_desc.c ****   }
 329              		.loc 1 257 5 is_stmt 1 view .LVU76
 330 0012 0249     		ldr	r1, .L31
 331              	.LVL24:
 257:Src/usbd_desc.c ****   }
 332              		.loc 1 257 5 is_stmt 0 view .LVU77
 333 0014 0248     		ldr	r0, .L31+4
 334              	.LVL25:
 257:Src/usbd_desc.c ****   }
 335              		.loc 1 257 5 view .LVU78
 336 0016 FFF7FEFF 		bl	USBD_GetString
 337              	.LVL26:
 257:Src/usbd_desc.c ****   }
 338              		.loc 1 257 5 view .LVU79
 339 001a F8E7     		b	.L29
 340              	.L32:
 341              		.align	2
 342              	.L31:
 343 001c 00000000 		.word	USBD_StrDesc
 344 0020 00000000 		.word	.LC0
 345              		.cfi_endproc
 346              	.LFE70:
 348              		.section	.rodata.USBD_FS_ManufacturerStrDescriptor.str1.4,"aMS",%progbits,1
 349              		.align	2
 350              	.LC1:
 351 0000 53544D69 		.ascii	"STMicroelectronics\000"
 351      63726F65 
 351      6C656374 
 351      726F6E69 
 351      637300
 352              		.section	.text.USBD_FS_ManufacturerStrDescriptor,"ax",%progbits
 353              		.align	1
 354              		.global	USBD_FS_ManufacturerStrDescriptor
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 358              		.fpu softvfp
 360              	USBD_FS_ManufacturerStrDescriptor:
 361              	.LVL27:
 362              	.LFB71:
 269:Src/usbd_desc.c ****   UNUSED(speed);
 363              		.loc 1 269 1 is_stmt 1 view -0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 269:Src/usbd_desc.c ****   UNUSED(speed);
 367              		.loc 1 269 1 is_stmt 0 view .LVU81
 368 0000 10B5     		push	{r4, lr}
 369              	.LCFI5:
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 4, -8
ARM GAS  /tmp/ccTn8evy.s 			page 15


 372              		.cfi_offset 14, -4
 373 0002 0A46     		mov	r2, r1
 270:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 374              		.loc 1 270 3 is_stmt 1 view .LVU82
 271:Src/usbd_desc.c ****   return USBD_StrDesc;
 375              		.loc 1 271 3 view .LVU83
 376 0004 034C     		ldr	r4, .L35
 377 0006 2146     		mov	r1, r4
 378              	.LVL28:
 271:Src/usbd_desc.c ****   return USBD_StrDesc;
 379              		.loc 1 271 3 is_stmt 0 view .LVU84
 380 0008 0348     		ldr	r0, .L35+4
 381              	.LVL29:
 271:Src/usbd_desc.c ****   return USBD_StrDesc;
 382              		.loc 1 271 3 view .LVU85
 383 000a FFF7FEFF 		bl	USBD_GetString
 384              	.LVL30:
 272:Src/usbd_desc.c **** }
 385              		.loc 1 272 3 is_stmt 1 view .LVU86
 273:Src/usbd_desc.c **** 
 386              		.loc 1 273 1 is_stmt 0 view .LVU87
 387 000e 2046     		mov	r0, r4
 388 0010 10BD     		pop	{r4, pc}
 389              	.L36:
 390 0012 00BF     		.align	2
 391              	.L35:
 392 0014 00000000 		.word	USBD_StrDesc
 393 0018 00000000 		.word	.LC1
 394              		.cfi_endproc
 395              	.LFE71:
 397              		.section	.rodata.USBD_FS_ConfigStrDescriptor.str1.4,"aMS",%progbits,1
 398              		.align	2
 399              	.LC2:
 400 0000 4D534320 		.ascii	"MSC Config\000"
 400      436F6E66 
 400      696700
 401              		.section	.text.USBD_FS_ConfigStrDescriptor,"ax",%progbits
 402              		.align	1
 403              		.global	USBD_FS_ConfigStrDescriptor
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu softvfp
 409              	USBD_FS_ConfigStrDescriptor:
 410              	.LVL31:
 411              	.LFB73:
 302:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 412              		.loc 1 302 1 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 302:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 416              		.loc 1 302 1 is_stmt 0 view .LVU89
 417 0000 08B5     		push	{r3, lr}
 418              	.LCFI6:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 3, -8
ARM GAS  /tmp/ccTn8evy.s 			page 16


 421              		.cfi_offset 14, -4
 422 0002 0A46     		mov	r2, r1
 303:Src/usbd_desc.c ****   {
 423              		.loc 1 303 3 is_stmt 1 view .LVU90
 303:Src/usbd_desc.c ****   {
 424              		.loc 1 303 5 is_stmt 0 view .LVU91
 425 0004 28B9     		cbnz	r0, .L38
 305:Src/usbd_desc.c ****   }
 426              		.loc 1 305 5 is_stmt 1 view .LVU92
 427 0006 0549     		ldr	r1, .L41
 428              	.LVL32:
 305:Src/usbd_desc.c ****   }
 429              		.loc 1 305 5 is_stmt 0 view .LVU93
 430 0008 0548     		ldr	r0, .L41+4
 431              	.LVL33:
 305:Src/usbd_desc.c ****   }
 432              		.loc 1 305 5 view .LVU94
 433 000a FFF7FEFF 		bl	USBD_GetString
 434              	.LVL34:
 435              	.L39:
 311:Src/usbd_desc.c **** }
 436              		.loc 1 311 3 is_stmt 1 view .LVU95
 312:Src/usbd_desc.c **** 
 437              		.loc 1 312 1 is_stmt 0 view .LVU96
 438 000e 0348     		ldr	r0, .L41
 439 0010 08BD     		pop	{r3, pc}
 440              	.LVL35:
 441              	.L38:
 309:Src/usbd_desc.c ****   }
 442              		.loc 1 309 5 is_stmt 1 view .LVU97
 443 0012 0249     		ldr	r1, .L41
 444              	.LVL36:
 309:Src/usbd_desc.c ****   }
 445              		.loc 1 309 5 is_stmt 0 view .LVU98
 446 0014 0248     		ldr	r0, .L41+4
 447              	.LVL37:
 309:Src/usbd_desc.c ****   }
 448              		.loc 1 309 5 view .LVU99
 449 0016 FFF7FEFF 		bl	USBD_GetString
 450              	.LVL38:
 309:Src/usbd_desc.c ****   }
 451              		.loc 1 309 5 view .LVU100
 452 001a F8E7     		b	.L39
 453              	.L42:
 454              		.align	2
 455              	.L41:
 456 001c 00000000 		.word	USBD_StrDesc
 457 0020 00000000 		.word	.LC2
 458              		.cfi_endproc
 459              	.LFE73:
 461              		.section	.rodata.USBD_FS_InterfaceStrDescriptor.str1.4,"aMS",%progbits,1
 462              		.align	2
 463              	.LC3:
 464 0000 4D534320 		.ascii	"MSC Interface\000"
 464      496E7465 
 464      72666163 
 464      6500
ARM GAS  /tmp/ccTn8evy.s 			page 17


 465              		.section	.text.USBD_FS_InterfaceStrDescriptor,"ax",%progbits
 466              		.align	1
 467              		.global	USBD_FS_InterfaceStrDescriptor
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 471              		.fpu softvfp
 473              	USBD_FS_InterfaceStrDescriptor:
 474              	.LVL39:
 475              	.LFB74:
 321:Src/usbd_desc.c ****   if(speed == 0)
 476              		.loc 1 321 1 is_stmt 1 view -0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 321:Src/usbd_desc.c ****   if(speed == 0)
 480              		.loc 1 321 1 is_stmt 0 view .LVU102
 481 0000 08B5     		push	{r3, lr}
 482              	.LCFI7:
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 3, -8
 485              		.cfi_offset 14, -4
 486 0002 0A46     		mov	r2, r1
 322:Src/usbd_desc.c ****   {
 487              		.loc 1 322 3 is_stmt 1 view .LVU103
 322:Src/usbd_desc.c ****   {
 488              		.loc 1 322 5 is_stmt 0 view .LVU104
 489 0004 28B9     		cbnz	r0, .L44
 324:Src/usbd_desc.c ****   }
 490              		.loc 1 324 5 is_stmt 1 view .LVU105
 491 0006 0549     		ldr	r1, .L47
 492              	.LVL40:
 324:Src/usbd_desc.c ****   }
 493              		.loc 1 324 5 is_stmt 0 view .LVU106
 494 0008 0548     		ldr	r0, .L47+4
 495              	.LVL41:
 324:Src/usbd_desc.c ****   }
 496              		.loc 1 324 5 view .LVU107
 497 000a FFF7FEFF 		bl	USBD_GetString
 498              	.LVL42:
 499              	.L45:
 330:Src/usbd_desc.c **** }
 500              		.loc 1 330 3 is_stmt 1 view .LVU108
 331:Src/usbd_desc.c **** 
 501              		.loc 1 331 1 is_stmt 0 view .LVU109
 502 000e 0348     		ldr	r0, .L47
 503 0010 08BD     		pop	{r3, pc}
 504              	.LVL43:
 505              	.L44:
 328:Src/usbd_desc.c ****   }
 506              		.loc 1 328 5 is_stmt 1 view .LVU110
 507 0012 0249     		ldr	r1, .L47
 508              	.LVL44:
 328:Src/usbd_desc.c ****   }
 509              		.loc 1 328 5 is_stmt 0 view .LVU111
 510 0014 0248     		ldr	r0, .L47+4
 511              	.LVL45:
ARM GAS  /tmp/ccTn8evy.s 			page 18


 328:Src/usbd_desc.c ****   }
 512              		.loc 1 328 5 view .LVU112
 513 0016 FFF7FEFF 		bl	USBD_GetString
 514              	.LVL46:
 328:Src/usbd_desc.c ****   }
 515              		.loc 1 328 5 view .LVU113
 516 001a F8E7     		b	.L45
 517              	.L48:
 518              		.align	2
 519              	.L47:
 520 001c 00000000 		.word	USBD_StrDesc
 521 0020 00000000 		.word	.LC3
 522              		.cfi_endproc
 523              	.LFE74:
 525              		.global	USBD_StringSerial
 526              		.comm	USBD_StrDesc,512,4
 527              		.global	USBD_LangIDDesc
 528              		.global	USBD_FS_DeviceDesc
 529              		.global	FS_Desc
 530              		.section	.data.FS_Desc,"aw"
 531              		.align	2
 534              	FS_Desc:
 535 0000 00000000 		.word	USBD_FS_DeviceDescriptor
 536 0004 00000000 		.word	USBD_FS_LangIDStrDescriptor
 537 0008 00000000 		.word	USBD_FS_ManufacturerStrDescriptor
 538 000c 00000000 		.word	USBD_FS_ProductStrDescriptor
 539 0010 00000000 		.word	USBD_FS_SerialStrDescriptor
 540 0014 00000000 		.word	USBD_FS_ConfigStrDescriptor
 541 0018 00000000 		.word	USBD_FS_InterfaceStrDescriptor
 542              		.section	.data.USBD_FS_DeviceDesc,"aw"
 543              		.align	2
 544              		.set	.LANCHOR0,. + 0
 547              	USBD_FS_DeviceDesc:
 548 0000 12010002 		.ascii	"\022\001\000\002\000\000\000@\203\004#W\000\002\001"
 548      00000040 
 548      83042357 
 548      000201
 549 000f 020301   		.ascii	"\002\003\001"
 550              		.section	.data.USBD_LangIDDesc,"aw"
 551              		.align	2
 552              		.set	.LANCHOR1,. + 0
 555              	USBD_LangIDDesc:
 556 0000 04030904 		.ascii	"\004\003\011\004"
 557              		.section	.data.USBD_StringSerial,"aw"
 558              		.align	2
 559              		.set	.LANCHOR2,. + 0
 562              	USBD_StringSerial:
 563 0000 1A0300   		.ascii	"\032\003\000"
 564 0003 00000000 		.space	23
 564      00000000 
 564      00000000 
 564      00000000 
 564      00000000 
 565              		.text
 566              	.Letext0:
 567              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 568              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
ARM GAS  /tmp/ccTn8evy.s 			page 19


 569              		.file 4 "/usr/include/newlib/sys/_types.h"
 570              		.file 5 "/usr/include/newlib/sys/reent.h"
 571              		.file 6 "/usr/include/newlib/sys/lock.h"
 572              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 573              		.file 8 "/usr/include/newlib/stdlib.h"
 574              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 575              		.file 10 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 576              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 577              		.file 12 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 578              		.file 13 "Inc/usbd_desc.h"
 579              		.file 14 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ctlreq.h"
ARM GAS  /tmp/ccTn8evy.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_desc.c
     /tmp/ccTn8evy.s:16     .text.USBD_FS_DeviceDescriptor:0000000000000000 $t
     /tmp/ccTn8evy.s:24     .text.USBD_FS_DeviceDescriptor:0000000000000000 USBD_FS_DeviceDescriptor
     /tmp/ccTn8evy.s:47     .text.USBD_FS_DeviceDescriptor:0000000000000008 $d
     /tmp/ccTn8evy.s:52     .text.USBD_FS_LangIDStrDescriptor:0000000000000000 $t
     /tmp/ccTn8evy.s:59     .text.USBD_FS_LangIDStrDescriptor:0000000000000000 USBD_FS_LangIDStrDescriptor
     /tmp/ccTn8evy.s:81     .text.USBD_FS_LangIDStrDescriptor:0000000000000008 $d
     /tmp/ccTn8evy.s:86     .text.IntToUnicode:0000000000000000 $t
     /tmp/ccTn8evy.s:92     .text.IntToUnicode:0000000000000000 IntToUnicode
     /tmp/ccTn8evy.s:174    .text.Get_SerialNum:0000000000000000 $t
     /tmp/ccTn8evy.s:180    .text.Get_SerialNum:0000000000000000 Get_SerialNum
     /tmp/ccTn8evy.s:239    .text.Get_SerialNum:000000000000002c $d
     /tmp/ccTn8evy.s:245    .text.USBD_FS_SerialStrDescriptor:0000000000000000 $t
     /tmp/ccTn8evy.s:252    .text.USBD_FS_SerialStrDescriptor:0000000000000000 USBD_FS_SerialStrDescriptor
     /tmp/ccTn8evy.s:280    .text.USBD_FS_SerialStrDescriptor:0000000000000010 $d
     /tmp/ccTn8evy.s:285    .rodata.USBD_FS_ProductStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccTn8evy.s:289    .text.USBD_FS_ProductStrDescriptor:0000000000000000 $t
     /tmp/ccTn8evy.s:296    .text.USBD_FS_ProductStrDescriptor:0000000000000000 USBD_FS_ProductStrDescriptor
     /tmp/ccTn8evy.s:343    .text.USBD_FS_ProductStrDescriptor:000000000000001c $d
                            *COM*:0000000000000200 USBD_StrDesc
     /tmp/ccTn8evy.s:349    .rodata.USBD_FS_ManufacturerStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccTn8evy.s:353    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 $t
     /tmp/ccTn8evy.s:360    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 USBD_FS_ManufacturerStrDescriptor
     /tmp/ccTn8evy.s:392    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000014 $d
     /tmp/ccTn8evy.s:398    .rodata.USBD_FS_ConfigStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccTn8evy.s:402    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 $t
     /tmp/ccTn8evy.s:409    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 USBD_FS_ConfigStrDescriptor
     /tmp/ccTn8evy.s:456    .text.USBD_FS_ConfigStrDescriptor:000000000000001c $d
     /tmp/ccTn8evy.s:462    .rodata.USBD_FS_InterfaceStrDescriptor.str1.4:0000000000000000 $d
     /tmp/ccTn8evy.s:466    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 $t
     /tmp/ccTn8evy.s:473    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 USBD_FS_InterfaceStrDescriptor
     /tmp/ccTn8evy.s:520    .text.USBD_FS_InterfaceStrDescriptor:000000000000001c $d
     /tmp/ccTn8evy.s:562    .data.USBD_StringSerial:0000000000000000 USBD_StringSerial
     /tmp/ccTn8evy.s:555    .data.USBD_LangIDDesc:0000000000000000 USBD_LangIDDesc
     /tmp/ccTn8evy.s:547    .data.USBD_FS_DeviceDesc:0000000000000000 USBD_FS_DeviceDesc
     /tmp/ccTn8evy.s:534    .data.FS_Desc:0000000000000000 FS_Desc
     /tmp/ccTn8evy.s:531    .data.FS_Desc:0000000000000000 $d
     /tmp/ccTn8evy.s:543    .data.USBD_FS_DeviceDesc:0000000000000000 $d
     /tmp/ccTn8evy.s:551    .data.USBD_LangIDDesc:0000000000000000 $d
     /tmp/ccTn8evy.s:558    .data.USBD_StringSerial:0000000000000000 $d

UNDEFINED SYMBOLS
USBD_GetString
