flash probe 0
flash info 0

flash protectn    #turn on off flash protection will most likely cause full erase

# program and verify using elf/hex/s19. verify and reset# are optional parametersopenocd -f board/stm32f3discovery.cfg \-c "program filename.elf verify reset exit"# binary files need the flash address passingopenocd -f board/stm32f3discovery.cfg \-c "program filename.bin exit 0x08000000"

Memory access commandsThese commands allow accesses of a specific size to the memory system.  Often these areused to configure the current target in some special way.  For example - one may need towrite certain values to the SDRAM controller to enable SDRAM.1.  Use thetargets(plural) command to change the current target.2.  In  system  level  scripts  these  commands  are  deprecated.   Please  use  their  TARGETobject siblings to avoid making assumptions about what TAP is the current target, orabout MMU configuration.[Command]mdd[phys]addr[count][Command]mdw[phys]addr[count][Command]mdh[phys]addr[count][Command]mdb[phys]addr[count]Display contents of addressaddr,  as 64-bit doublewords (mdd),  32-bit words (mdw),16-bit halfwords (mdh), or 8-bit bytes (mdb).  When the current target has an MMUwhich is present and active,addris interpreted as a virtual address.  Otherwise, or ifthe optionalphysflag is specified,addris interpreted as a physical address.  Ifcountis specified, displays that many units.  (If you want to manipulate the data instead ofdisplaying it, see themem2arrayprimitives.)[Command]mwd[phys]addr doubleword[count][Command]mww[phys]addr word[count][Command]mwh[phys]addr halfword[count][Command]mwb[phys]addr byte[count]Writes the specifieddoubleword(64 bits),word(32 bits),halfword(16 bits), orbyte(8-bit) value, at the specified addressaddr.  When the current target has an MMUwhich is present and active,addris interpreted as a virtual address.  Otherwise, or i

 Image loading commands[Command]dump_imagefilename address sizeDumpsizebytes  of  target  memory  starting  ataddressto  the  binary  file  namedfilename.[Command]fast_loadLoads an image stored in memory byfast_load_imageto the current target.  Mustbe preceded by fastloadimage.[Command]fast_load_imagefilename address[bin|ihex|elf|s19]Normally you should be usingload_imageor GDB load.  However, for testing pur-poses or when I/O overhead is significant(OpenOCD running on an embedded host),storing the image in memory and uploading the image to the target can be a way toupload e.g.  multiple debug sessions when the binary does not change.  Argumentsare the same asload_image, but the image is stored in OpenOCD host memory, i.e.does not affect target.  This approach is also useful when profiling target programmingperformance as I/O and target programming can easily be profiled separately.[Command]load_imagefilename address[[bin|ihex|elf|s19]min_addrmax_length]Load image from filefilenameto target memory offset byaddressfrom its load address.The file format may optionally be specified (bin,ihex,elf, ors19).  In addition thefollowing arguments may be specified:minaddr- ignore data belowminaddr(thisis w.r.t.  to the target’s load address+address)maxlength- maximum number ofbytes to load.proc load_image_bin {fname foffset address length } {# Load data from fname filename at foffset offset to# target at address. Load at most length bytes.load_image $fname [expr $address - $foffset] bin \$address $length}[Command]test_imagefilename[address[bin|ihex|elf]]Displays  image  section  sizes  and  addresses  as  iffilenamewere  loaded  into  targetmemory  starting  ataddress(defaults  to  zero).   The  file  format  may  optionally  bespecified (bin,ihex, orelf)[Command]verify_imagefilename address[bin|ihex|elf]Verifyfilenameagainst  target  memory  starting  ataddress.   The  file  format  mayoptionally be specified (bin,ihex, orelf) This will first attempt a comparison usinga CRC checksum, if this fails it will try a binary compare.[Command]verify_image_checksumfilename address[bin|ihex|elf]Verifyfilenameagainst  target  memory  starting  ataddress.   The  file  format  mayoptionally be specified (bin,ihex, orelf) This perform a comparison using a CRCchecksum only

  Misc Commands[Command]profileseconds filename[start end]Profiling samples the CPU’s program counter as quickly as possible, which is usefulfor non-intrusive stochastic profiling.  Saves up to 10000 samples infilenameusing“gmon.out” format.  Optionalstartandendparameters allow to limit the addressrange.[Command]versionDisplays a string identifying the version of this OpenOCD server.[Command]virt2physvirtualaddressRequests the current target to map the specifiedvirtualaddressto its correspondingphysical address, and displays the result.

   RAM testing

To use them, you usually need to initialise your RAM controller first; consult your SoC’sdocumentation to get the recommended list of register operations and translate them to thecorrespondingmww/mwbcommands.Load the memory testing functions withsource [find tools/memtest.tcl]to get access to the following facilities:[Command]memTestDataBusaddressTest the data bus wiring in a memory region by performing a walking 1’s test at afixed address within that region.[Command]memTestAddressBusbaseaddress sizePerform a walking 1’s test on the relevant bits of the address and check for aliasing.This test will find single-bit address failures such as stuck-high, stuck-low, and shortedpins.[Command]memTestDevicebaseaddress sizeTest the integrity of a physical memory device by performing an increment/decrementtest over the entire region.  In the process every storage bit in the device is tested aszero and as one.[Command]runAllMemTestsbaseaddress sizeRun all of the above tests over a specified memory region.

    Firmware recovery

helpersOpenOCD  includes  an  easy-to-use  script  to  facilitate  mass-market  devices  recovery  withJTAG.For quickstart instructions run:openocd -f tools/firmware-recovery.tcl -c firmware_help

